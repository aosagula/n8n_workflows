"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.waitField = exports.timeoutField = exports.consistencyField = exports.shardKeyField = exports.withVectorField = exports.withPayloadField = exports.filterField = exports.orderingField = exports.collectionNameField = void 0;
const collectionNameField = (showOperation) => {
    return {
        displayName: 'Collection Name',
        description: 'Name of the collection',
        name: 'collectionName',
        type: 'resourceLocator',
        default: { mode: 'list', value: null },
        displayOptions: {
            show: {
                operation: [showOperation],
            },
        },
        modes: [
            {
                displayName: 'From List',
                name: 'list',
                type: 'list',
                typeOptions: {
                    searchListMethod: 'listCollections',
                    searchable: true,
                },
            },
            {
                displayName: 'By Name',
                name: 'name',
                type: 'string',
            },
        ],
        required: true,
    };
};
exports.collectionNameField = collectionNameField;
const orderingField = (showOperation) => {
    return {
        displayName: 'Ordering',
        name: 'ordering',
        description: 'Defines ordering guarantees for the operation',
        type: 'options',
        options: [
            {
                name: 'Weak',
                value: 'weak',
            },
            {
                name: 'Medium',
                value: 'medium',
            },
            {
                name: 'Strong',
                value: 'strong',
            },
        ],
        default: 'weak',
        displayOptions: {
            show: {
                operation: [showOperation],
            },
        },
    };
};
exports.orderingField = orderingField;
const filterField = (showOperation) => {
    return {
        displayName: 'Filter',
        name: 'filter',
        description: 'Only select points which satisfies these conditions',
        default: 'null',
        type: 'json',
        displayOptions: {
            show: {
                operation: [showOperation],
            },
        },
    };
};
exports.filterField = filterField;
const withPayloadField = (showOperation) => {
    return {
        displayName: 'With Payload',
        name: 'withPayload',
        description: 'Whether to include payload in the response',
        default: true,
        type: 'boolean',
        displayOptions: {
            show: {
                operation: [showOperation],
            },
        },
    };
};
exports.withPayloadField = withPayloadField;
const withVectorField = (showOperation) => {
    return {
        displayName: 'With Vector',
        name: 'withVector',
        description: 'Whether to include vectors in the response',
        default: false,
        type: 'boolean',
        displayOptions: {
            show: {
                operation: [showOperation],
            },
        },
    };
};
exports.withVectorField = withVectorField;
const shardKeyField = (showOperation) => {
    return {
        displayName: 'Shard Key',
        name: 'shardKey',
        description: 'Specify in which shards to look for the points, if not specified - look in all shards',
        default: 'null',
        type: 'json',
        displayOptions: {
            show: {
                operation: [showOperation],
            },
        },
    };
};
exports.shardKeyField = shardKeyField;
const consistencyField = (showOperation) => {
    return {
        displayName: 'Consistency',
        name: 'consistency',
        description: 'Define read consistency guarantees for the operation',
        type: 'options',
        options: [
            {
                name: 'Majority',
                value: 'majority',
            },
            {
                name: 'Quorum',
                value: 'quorum',
            },
            {
                name: 'All',
                value: 'all',
            },
        ],
        default: 'majority',
        displayOptions: {
            show: {
                operation: [showOperation],
            },
        },
    };
};
exports.consistencyField = consistencyField;
const timeoutField = (showOperation) => {
    return {
        displayName: 'Timeout',
        name: 'timeout',
        description: 'If set, overrides global timeout for this request. Unit is seconds.',
        default: 100,
        type: 'number',
        displayOptions: {
            show: {
                operation: [showOperation],
            },
        },
    };
};
exports.timeoutField = timeoutField;
const waitField = (showOperation) => {
    return {
        displayName: 'Wait',
        name: 'wait',
        description: 'Whether towait for changes to actually happen',
        default: true,
        type: 'boolean',
        displayOptions: {
            show: {
                operation: [showOperation],
            },
        },
    };
};
exports.waitField = waitField;
//# sourceMappingURL=Commons.js.map