"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.payloadFacetsFields = exports.payloadFacetsOperation = void 0;
const Commons_1 = require("./Commons");
exports.payloadFacetsOperation = {
    name: 'Payload Facets',
    value: 'payloadFacets',
    action: 'Get Payload Facets',
    description: 'Retrieves facets for the specified payload field',
    routing: {
        request: {
            method: 'POST',
            url: '=/collections/{{$parameter.collectionName}}/facet',
            body: {
                key: '={{$parameter.key}}',
                filter: '={{JSON.parse($parameter.filter)}}',
                limit: '={{$parameter.limit}}',
                exact: '={{$parameter.exact}}',
                shard_key: '={{JSON.parse($parameter.shardKey)}}',
            },
            qs: {
                consistency: '={{$parameter.consistency}}',
                timeout: '={{$parameter.timeout}}',
            },
        },
    },
};
exports.payloadFacetsFields = [
    (0, Commons_1.collectionNameField)('payloadFacets'),
    {
        displayName: 'Key',
        name: 'key',
        description: 'Payload key to use for faceting',
        default: '',
        type: 'string',
        required: true,
        displayOptions: {
            show: {
                operation: ['payloadFacets'],
            },
        },
    },
    (0, Commons_1.filterField)('payloadFacets'),
    {
        displayName: 'Limit',
        name: 'limit',
        description: 'Max number of results to return',
        default: 50,
        type: 'number',
        typeOptions: {
            minValue: 1,
        },
        displayOptions: {
            show: {
                operation: ['payloadFacets'],
            },
        },
    },
    {
        displayName: 'Exact',
        name: 'exact',
        description: 'Whether to do a more expensive exact count for each of the values in the facet',
        default: false,
        type: 'boolean',
        displayOptions: {
            show: {
                operation: ['payloadFacets'],
            },
        },
    },
    (0, Commons_1.shardKeyField)('payloadFacets'),
    (0, Commons_1.consistencyField)('payloadFacets'),
    (0, Commons_1.timeoutField)('payloadFacets'),
];
//# sourceMappingURL=PayloadFacets.js.map